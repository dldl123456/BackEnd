/*
	 * GC:
	
	　　垃圾回收机制，有虚拟机自动调用，程序员无法精确控制。
	
	　　其开销影响性能，java虚拟机必须跟踪程序中有用的对象，确定哪些无用的。
	
	　　只回收JVM堆内存里的对象空间
	
	* GC机制的优点:
	　　* 1.提高编程效率,摈弃了C/C++中的指针，避免因遗忘释放内存而导致的内存泄漏。
	　　* 2.保证了程序的完整性。
	
	* GC原理:
	
	　　JVM中有一个线程专门用于回收堆内存中不使用对象，常用的方法:
	　　　　* 1.定时扫描堆中不使用的对象
	　　　　* 2.通过计数控制回收时机。
	
	
	* 什么数据会被垃圾回收？
	　　* 垃圾回收机制回收的堆内存中的对象信息，不能回收物理连接，数据库连接，输入/输出和Socket。
	　　* 当对象不再使用时推荐将该对象的引用更改null,暗示 垃圾回收器优先处理。
	
	* 建议虚拟机进行垃圾回收的方法：
	
	　　可以设置为null，暗示GC回收
	
	　　System.gc()或Runtime.getRunTime().gc();
	
	 
	
	 finalize（）在垃圾回收前调用，可以在该方法中编写一些垃圾回收前想做事情的代码。
	
	不建议程序员手工调用，该方法是由JVM自动调用GC
 */

package eg.rub.garbage;

public class Garbage {

}
