笔记：

三层架构：

视图层 (用户看到的界面)
业务逻辑层 (处理用户的请求)
数据访问层 (操作数据库)
实体类
帮助类
测试类


泛型    <T>  ---参数化类型
可以接收任意类型，
如果类型不匹配，则直接编译报错，避免了类型转换异常。


<>:菱形语法 

集合  ---容器
集合框架  ---集合相关的一些接口和类

Collection
	---List
		---ArrayList
			(Vector)
		---LinkedList
	---Set
		---HashSet
		---TreeSet
		
Map
	---HashMap
	---TreeMap


ArrayList比较两个对象是否相等：equals()





















